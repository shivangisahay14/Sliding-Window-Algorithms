string minWindow(string s, string t) {
        unordered_map<char,int> mp;
        
        for(char i:t)
            mp[i]++;
			
			//storing the occurence of the characters in the map
        
        int i=0,j=0,len=INT_MAX,count=mp.size(),start=0;
        
        while(j<s.size()){
            if(mp.find(s[j]) != mp.end()){
                mp[s[j]]--;
                if(mp[s[j]] == 0)
                    count--;
            }
			
			// if char @ j is present in map we decrement its value
			// and if the value becomes 0 then we decrement count
			
            if(count == 0){  
                if(j-i+1 < len){    
                    start=i;  
                    len=j-i+1;
                }
				
				// if count is 0 this means we have all the chracters in the window
				// if length of current window is less than 'len' , we  change length
				// and start index
				
                while(count==0){          
                    if(mp.find(s[i]) != mp.end()){ 
                        mp[s[i]]++;
                        if(mp[s[i]] > 0){
                            count++;      
                            if(j-i+1 < len){
                                start=i;
                                len=j-start+1;
                            }
                        }
                    }
                    i++;
                }
				
				// If at any index count becomes > 0 then we check for length
				// and loop is terminated
				
            }   
            j++;
        }
        
        return (len==INT_MAX)?"":s.substr(start,len);
        
    }
